% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/svr.R
\name{eps.svr}
\alias{eps.svr}
\title{epsilon - Support Vector Regression}
\usage{
eps.svr(
  X,
  y,
  eps = 0.1,
  kernel = c("linear", "rbf", "poly"),
  C = 1,
  gamma = 1/ncol(X),
  degree = 3,
  coef0 = 0,
  max.steps = 1000,
  rcpp = TRUE
)
}
\arguments{
\item{X, y}{dataset and explained variable.}

\item{eps}{epsilon in the insensitive-loss function (default \code{eps = 0.1}).}

\item{kernel}{kernel function.}

\item{C}{plenty term (default \code{C = 1}).}

\item{gamma}{parameter for \code{'rbf'} and \code{'poly'} kernel. Default \code{gamma = 1/ncol(X)}.}

\item{degree}{parameter for polynomial kernel, default: \code{degree = 3}.}

\item{coef0}{parameter for polynomial kernel,  default: \code{coef0 = 0}.}

\item{max.steps}{the number of iterations to solve the optimization problem.}

\item{rcpp}{speed up your code with Rcpp, default \code{rcpp = TRUE}.}
}
\value{
return eps.svr object.
}
\description{
\code{eps.svr} is an R implementation of epsilon - support vector regression
}
\examples{
library(manysvms)
library(MASS)
library(ggplot2)

set.seed(1235)
x1 <- mvrnorm(200, mu = 0, Sigma = 3)
x2 <- 2*x1  + mvrnorm(200, mu = 0, Sigma = 1)

X <- as.matrix(x1)
y <- as.matrix(x2)

m <- eps.svr(X,y, eps=2, C = 1)
dataXy <- as.data.frame(cbind(X, y))
ggplot(data = dataXy, aes(x = X, y = y))+
  geom_point()+
  geom_abline(slope = m$coef, intercept = m$intercept)+
  geom_abline(slope = m$coef, intercept = m$intercept + m$epsilon, linetype=2, color = 'red')+
  geom_abline(slope = m$coef, intercept = m$intercept - m$epsilon, linetype=2, color = 'red')+
  theme_classic()
}
\author{
Zhang Jiaqi.
}
